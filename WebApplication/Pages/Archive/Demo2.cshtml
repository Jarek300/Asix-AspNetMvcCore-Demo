@page
@model WebApplication.Pages.Archive.Demo2Model
@{
    ViewData["Title"] = "Archive/Demo2";
}


<div class="jumbotron bg-light shadow-sm">
    <h1 class="display-4">Odczyt wartości archiwalnych surowych za okres 1h</h1>
    <hr class="my-4">

    <form method="post">
        <p>
            Data: <input asp-for="@Model.DateReadTime" />

            <input type="submit" value="Odśwież" />
        </p>
    </form>
</div>



@if (!@Model.mVariableRawArchiveA000.readSucceeded)
{
    <div class="alert alert-danger" role="alert">
        @Model.mVariableRawArchiveA000.readStatusString;
    </div>
    return;
}



@{
    int count = @Model.mVariableRawArchiveA000.samples.Count();
    System.Text.StringBuilder stringBuilder = new System.Text.StringBuilder();
}



<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<div id="chart_div" style="height:30rem;"></div>


<script>
    google.charts.load('current', { 'packages': ['corechart'] });
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
        var data = new google.visualization.DataTable();
        data.addColumn('date', 'Time of Day');
        data.addColumn('number', 'A000');

        data.addRows([
            // data format
            // [new Date(2015, 0, 1, 1, 2, 3), 5],

            @for (int i = 0; i < count; ++i)
            {
                stringBuilder.Clear();

                VariableRawSample sampleA000 = @Model.mVariableRawArchiveA000.samples[i];

                DateTime dateTime = sampleA000.t.ToLocalTime();
                string s = $"[new Date({dateTime.Year}, {dateTime.Month-1}, {dateTime.Day}, {dateTime.Hour}, {dateTime.Minute}, {dateTime.Second}), ";
                stringBuilder.Append(s);


                if (@sampleA000.IsQualityBad())
                {
                    stringBuilder.Append("null");
                }
                else
                {
                    stringBuilder.Append(sampleA000.v.ToString("G", System.Globalization.CultureInfo.InvariantCulture));
                }


                stringBuilder.Append("],");


                @Html.Raw(stringBuilder.ToString());
            }
        ]);


        var options = {
            legend: 'none',
            lineWidth: 2,
            chartArea: { width: '90%', height: '90%', backgroundColor: 'cornsilk' },
            // explorer: {actions: ['dragToPan', 'rightClickToReset'], axis: 'horizontal'}, // tests
            hAxis: {
                format: 'HH:mm:ss',
                gridlines: { count: 10 }
            },
            vAxis: {
                gridlines: { count: 10 },
                minValue: 0
            }
        };

        var chart = new google.visualization.LineChart(document.getElementById('chart_div'));
        chart.draw(data, options);
    }
</script>
